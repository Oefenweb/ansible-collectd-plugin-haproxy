---
sudo: required
dist: xenial

language: python
python:
  - "2.7"
  - "3.5"

env:
  - ANSIBLE_VERSION=latest
  - ANSIBLE_VERSION=2.10.2
  - ANSIBLE_VERSION=2.10.1
  - ANSIBLE_VERSION=2.10.0
  - ANSIBLE_VERSION=2.9.14
  - ANSIBLE_VERSION=2.9.13
  - ANSIBLE_VERSION=2.9.12
  - ANSIBLE_VERSION=2.9.11
  - ANSIBLE_VERSION=2.9.10
  - ANSIBLE_VERSION=2.9.9
  - ANSIBLE_VERSION=2.9.8
  - ANSIBLE_VERSION=2.9.7
  - ANSIBLE_VERSION=2.9.6
  - ANSIBLE_VERSION=2.9.5
  - ANSIBLE_VERSION=2.9.4
  - ANSIBLE_VERSION=2.9.3
  - ANSIBLE_VERSION=2.9.2
  - ANSIBLE_VERSION=2.9.1
  - ANSIBLE_VERSION=2.9.0
  - ANSIBLE_VERSION=2.8.16
  - ANSIBLE_VERSION=2.8.15
  - ANSIBLE_VERSION=2.8.14
  - ANSIBLE_VERSION=2.8.13
  - ANSIBLE_VERSION=2.8.12
  - ANSIBLE_VERSION=2.8.11
  - ANSIBLE_VERSION=2.8.10
  - ANSIBLE_VERSION=2.8.9
  - ANSIBLE_VERSION=2.8.8
  - ANSIBLE_VERSION=2.8.7
  - ANSIBLE_VERSION=2.8.6
  - ANSIBLE_VERSION=2.8.5
  - ANSIBLE_VERSION=2.8.4
  - ANSIBLE_VERSION=2.8.3
  - ANSIBLE_VERSION=2.8.2
  - ANSIBLE_VERSION=2.8.1
  - ANSIBLE_VERSION=2.8.0

branches:
  only:
    - master

before_install:
  - sudo apt-get update -qq

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/test.yml -vvvv

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - if [ "$ANSIBLE_VERSION" = "latest" ]; then ansible-lint tests/test.yml; fi

notifications:
  email: false
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    rooms:
      secure: "gddPrb52tor7oMrxO8L7JUzQs8ETNRUwIcsaBLtehXqP83UOd8pzzgoRGZJAf4E1/a+NXegQA8VlGNDsZW+gHZ2hgNQxnQrKGbn8z+6ZxpF3D3sXiCkwZKCqBPG+RHZB1WqDAAv0KbXh+oPLm42Fbh45+MJ4SHpNkhB034b+ntrupLRpL2cap3+LN2Pcoz0XeqHy5Piu2pf7npWEzixfTNuiyMWCq9tSa7RpcS6ZSKNAD8qGqlZl3VAVnBJgGUCnDwHSqaECB0K/928adrDE8nQoUn/uBjsV1NoWMqaMsXFwy8jEWKfK+y5dCBfs+yJd/nuHvDJlKbi/lr3CVPyfGYYkz3bK+nk8iE8pQPKsTCc12nOwMqfUM0U+l0sVt85Si3ziqcWWkv3nqs+fQXFLpJUieQX1Tyam6O2YJrshyO02LvvKuiuLLQmx79kCo6ln5Getc5/ZDdQlFsHGX0iY2rjHV9RiLlOJNs/1QD5hNZ86cpzVv7cfiv8UhyMFiEq00nqwnneOeEizh1D2CXBfWRLYH/G13pm4+PuR6Szq3aqUe/6WhX+gGm27kk9ag8hlAfeO/JbQyNWRDUAE6iCmfk+PxX3KAdNZCqO4CQEkTKljdlw3kis9wNA+1FDvjBo3DvkB1Vc7c1CbhkySZI5v/ZFSCYEBUCMVo2oUL9x69wI="
